#!/bin/bash

# Specify the host project ID
HOST_PROJECT_ID="your-host-project-id"

# Specify the region where your subnets might be located
REGION="region-1"

# Read subnet names from the text file
SUBNETS_FILE="subnets.txt"

# Output file
OUTPUT_FILE="output.txt"

# Clear the output file before writing
> "$OUTPUT_FILE"

echo "Starting to check subnets for host project $HOST_PROJECT_ID in region $REGION" >> "$OUTPUT_FILE"

# Function to query logs and find associated service projects
query_logs_for_subnet() {
    local subnet_name=$1

    # Define the query to extract logs related to the subnet
    query="resource.type=\"gce_subnetwork\" AND resource.labels.subnetwork=\"projects/$HOST_PROJECT_ID/regions/$REGION/subnetworks/$subnet_name\""

    # Run the query in Logs Explorer
    results=$(gcloud logging read "$query" --format="json" --limit=100)

    if [[ -z "$results" ]]; then
        echo "Error: No logs found for subnet $subnet_name in region $REGION for project $HOST_PROJECT_ID." >> "$OUTPUT_FILE"
        return
    fi

    echo "Checking subnet: $subnet_name in region: $REGION" >> "$OUTPUT_FILE"

    # Inspect the results to find the correct path to project ID
    echo "$results" | jq '.[0]' # Check the first log entry to understand its structure

    # Extract project IDs from the logs
    echo "$results" | jq -r '
        .[] |
        (
            .resource.labels.project_id // 
            .jsonPayload.projectId // 
            .protoPayload.authenticationInfo.principalEmail // 
            .protoPayload.requestMetadata.callerIp
        )' | sort -u | while read -r project_id; do
        if [[ -n "$project_id" && "$project_id" != "null" ]]; then
            echo "  - Subnet is used by service project: $project_id" >> "$OUTPUT_FILE"
        else
            echo "  - No associated service project found for this log entry." >> "$OUTPUT_FILE"
        fi
    done
}

# Loop through each subnet and find associated service projects
while IFS= read -r subnet; do
    echo "---------------------------------" >> "$OUTPUT_FILE"
    echo "Subnet: $subnet" >> "$OUTPUT_FILE"
    query_logs_for_subnet "$subnet"
done < "$SUBNETS_FILE"

echo "Results have been saved to $OUTPUT_FILE"

















#!/bin/bash

# Specify the host project ID
HOST_PROJECT_ID="your-host-project-id"

# Specify the subnet name you want to check
SUBNET_NAME="your-subnet-name"

# Output file
OUTPUT_FILE="output.txt"

# Clear the output file before writing
> "$OUTPUT_FILE"

echo "Starting to check service projects using subnet $SUBNET_NAME" >> "$OUTPUT_FILE"

# Get the list of service projects associated with the Shared VPC
SERVICE_PROJECTS=$(gcloud compute shared-vpc associated-projects list --project="$HOST_PROJECT_ID" --format="value(project)")

# Function to check if the subnet is used in a service project
check_subnet_usage() {
    local project_id=$1

    # List subnets in the service project and check if the subnet is listed
    local subnets=$(gcloud compute networks subnets list --project="$project_id" --format="value(name)")

    if echo "$subnets" | grep -q "$SUBNET_NAME"; then
        echo "  - Subnet $SUBNET_NAME is used by service project: $project_id" >> "$OUTPUT_FILE"
    fi
}

# Loop through each service project and check for the subnet
for project in $SERVICE_PROJECTS; do
    echo "Checking service project: $project" >> "$OUTPUT_FILE"
    check_subnet_usage "$project"
done

echo "Results have been saved to $OUTPUT_FILE"

