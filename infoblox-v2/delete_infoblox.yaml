# This is your deletion workflow, now with secret masking.
name: 'Infoblox: Delete CIDR Reservation'

on:
  workflow_dispatch:
    inputs:
      network_view:
        description: 'Select the Network View where the subnet exists'
        required: true
        type: string
      subnet_cidr:
        description: 'Enter the exact CIDR of the subnet to delete (e.g., 100.45.3.4/28)'
        required: true
        type: string

jobs:
  dry-run:
    name: 'Plan: Find subnet to delete'
    runs-on: ubuntu-latest
    environment: infoblox-prod
    outputs:
      subnet_ref: ${{ steps.find_subnet_step.outputs.subnet_ref }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Get and Mask Infoblox Credentials
        run: |
          set -e
          SECRET_USERNAME_NAME="${{ secrets.INFOBLOX_SECRET_USERNAME }}"
          SECRET_PASSWORD_NAME="${{ secrets.INFOBLOX_SECRET_PASSWORD }}"
          GCLOUD_PROJECT="YOUR_GCP_PROJECT_ID" # IMPORTANT: Replace with your GCP Project ID or secret ref

          INFOBLOX_USERNAME_VAL=$(gcloud secrets versions access latest --secret="${SECRET_USERNAME_NAME}" --project="${GCLOUD_PROJECT}")
          INFOBLOX_PASSWORD_VAL=$(gcloud secrets versions access latest --secret="${SECRET_PASSWORD_NAME}" --project="${GCLOUD_PROJECT}")
          
          echo "::add-mask::$INFOBLOX_USERNAME_VAL"
          echo "::add-mask::$INFOBLOX_PASSWORD_VAL"

          echo "INFOBLOX_USERNAME=$INFOBLOX_USERNAME_VAL" >> $GITHUB_ENV
          echo "INFOBLOX_PASSWORD=$INFOBLOX_PASSWORD_VAL" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: pip install requests

      - name: Find Subnet to be Deleted (Dry Run)
        id: find_subnet_step
        run: |
          # IMPORTANT: Replace 'infoblox_delete_cidr.py' with the name of your new Python script
          python infoblox_delete_cidr.py dry-run \
            --infoblox-url ${{ secrets.INFOBLOX_URL }} \
            --network-view "${{ github.event.inputs.network_view }}" \
            --subnet-cidr "${{ github.event.inputs.subnet_cidr }}"
        env:
          INFOBLOX_USERNAME: ${{ env.INFOBLOX_USERNAME }}
          INFOBLOX_PASSWORD: ${{ env.INFOBLOX_PASSWORD }}

  apply:
    name: 'Apply: Delete the subnet'
    runs-on: ubuntu-latest
    needs: dry-run
    environment: infoblox-prod 
    if: success() && needs.dry-run.outputs.subnet_ref != ''
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Get and Mask Infoblox Credentials
        run: |
          set -e
          SECRET_USERNAME_NAME="${{ secrets.INFOBLOX_SECRET_USERNAME }}"
          SECRET_PASSWORD_NAME="${{ secrets.INFOBLOX_SECRET_PASSWORD }}"
          GCLOUD_PROJECT="YOUR_GCP_PROJECT_ID" # Replace with your project ID

          INFOBLOX_USERNAME_VAL=$(gcloud secrets versions access latest --secret="${SECRET_USERNAME_NAME}" --project="${GCLOUD_PROJECT}")
          INFOBLOX_PASSWORD_VAL=$(gcloud secrets versions access latest --secret="${SECRET_PASSWORD_NAME}" --project="${GCLOUD_PROJECT}")
          
          echo "::add-mask::$INFOBLOX_USERNAME_VAL"
          echo "::add-mask::$INFOBLOX_PASSWORD_VAL"

          echo "INFOBLOX_USERNAME=$INFOBLOX_USERNAME_VAL" >> $GITHUB_ENV
          echo "INFOBLOX_PASSWORD=$INFOBLOX_PASSWORD_VAL" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: pip install requests

      - name: Delete the Subnet (Apply)
        run: |
          echo "Applying deletion for subnet with reference..."
          python infoblox_delete_cidr.py apply \
            --infoblox-url ${{ secrets.INFOBLOX_URL }} \
            --subnet-ref "${{ needs.dry-run.outputs.subnet_ref }}"
        env:
          INFOBLOX_USERNAME: ${{ env.INFOBLOX_USERNAME }}
          INFOBLOX_PASSWORD: ${{ env.INFOBLOX_PASSWORD }}
